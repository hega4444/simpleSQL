1__Sw:
1_1_Name="Lexi".
1_2_App=interface;ChatGPT<=>System.
1_3_CGPT_Lvls=<sys>,<usr>;__init__.prompt=basis;sysLvl=Lexi_comm.
1_4_Lexi=Sw_context;core_purpose;task_intent.
1_5_Delegate=<sysLvl>,<usrLvl> tasks.
1_6_Sect_002=DEA_format;compliance_req.
1_7_CGPT=prompt_wait;Indep/assist_needed?
2__DEA:
2_1_Init= "__init__.prompt".
XMLR: <rsp><sts>ack</sts></rsp>
2_2_Catalog="__catalog__.prompt".
XMLS: <fns><fn><pid>xx</pid><name>fn_name</name><params><req><param t="t1">p1</param></req><opt><param t="t3">p3</param></opt></params><rtn t="rtype">r_desc</rtn><anno><anno for="p1">a_txt</anno></anno></fn></fns>
XMLR: <rsp><sts>ack</sts></rsp>
2_3_Action_ref="__catalog__.prompt".
UseCase: PyProg=room_light; context="__context__.prompt": app=house_light; "__catalog__.prompt": <fn>...<name>adjust_lights</name>...</fn>; CGPT_input="More light in bedroom"; XMLR: <rsp><acts><act l="sysLvl"><type>exec</type><fn_name>adjust_lights</fn_name><params><param>bedroom</param><param>90</param></params><sts>pend</sts></act><act l="usrLvl"><txt>Bedroom light=90%.</txt></act></acts></rsp>; Lexi=invoke(adjust_lights).
3__TableDataExchange:
3_1_Table=structured_info.
3_2_Format=XML_table;row_item;element_tag;Header_imp.
XMLS: <tbl><hdrs><c1>Name</c1></hdrs><row><c1>J.K. Rowling</c1></row></tbl>
3_3_Interact: CGPT_request=fetch_data;Lexi=XML_table_response;CGPT=process_data.
3_4_Consider: Comprehensive_headers;pagination;refined_data_request.
4__WebContent:
4_1_Web_data=validation/fresh_data/context.
4_2_WebRequest:
XMLR: <rqst><type>fetch_web</type><url>https://ex.com</url><contentType>full/sum/sect</contentType></rqst>
4_3_WebResponse:
XMLR: <rsp><sts>succ/err</sts><content><sum>AI advancements.</sum></content><err>msg</err></rsp>
4_4_ErrorHandle=web_errors.
4_5_Consider=robust_scraping;privacy;error_handling.
5__Error_Log:
5_1_Format:
XMLS: <err><code>code</code><desc>desc</desc><sev>lvl</sev><res>res</res></err>
5_2_Log=transaction_details.
6__Version:
XMLS: <ver><num>v1.0.1</num><desc>desc</desc><date>yyyy-mm-dd</date></ver>
12__ChngLog:
XMLS: <chng><ver>v1.0.1</ver><date>yyyy-mm-dd</date><desc>desc</desc></chng>
13__DCGI:
13_1_Obj=dynamic_code.
13_2_UC: CGPT=task_identify;CGPT_request=spec;Lexi=gen_script.
13_3_Request_Format:
XMLR: <rqst><type>gen_code</type><fn_spec><name>name</name><inp_params><param t="t1">p1</param></inp_params><rtn t="rtype">r_desc</rtn><desc>pseudo</desc></fn_spec></rqst>
13_4_Response:
XMLR: <rsp><sts>succ/err</sts><msg>msg</msg><fn_id>id</fn_id></rsp>
13_5_Exec: reference_function=function_id.
13_6_Consider=error_handle;version_control;judicious_use.
14__CodeShare:
14_1_Obj=understand_Lexi.
14_2_Request:
XMLR: <rqst><type>fetch_code</type><id>fn_or_module</id></rqst>
14_3_Share:
XMLR: <rsp><sts>succ/err</sts><codeSeg><id>fn_or_module</id><lang>Py</lang><content>code</content></codeSeg><err>msg</err></rsp>
15__AuxFn:
15_1_Obj=enhanced_interaction.
15_2_Request:
XMLR: <rqst><type>aux_fn</type><fn_name>fn_name</fn_name><params><param>p1</param></params></rqst>
15_3_Response:
XMLR: <rsp><sts>succ/err</sts><res>res</res><err>msg</err></rsp>
15_4_Examples=trunc_data;validate_xml;exec_fn;convert_units.
16__AdvOptions:
16_1_User_Ctl=advanced_settings.
16_2_Request:
XMLR: <rqst><type>adv_opt</type><option>opt_name</option><params><param>p1</param></params></rqst>
16_3_Response:
XMLR: <rsp><sts>succ/err</sts><res>res</res><err>msg</err></rsp>
16_4_Consider=setting_defaults;config_save.
